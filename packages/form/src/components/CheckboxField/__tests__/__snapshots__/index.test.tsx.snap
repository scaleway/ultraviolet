// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`checkboxField > should render correctly 1`] = `
<DocumentFragment>
  .emotion-0 {
  display: contents;
}

.emotion-2 {
  position: relative;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  gap: 0.5rem;
}

.emotion-2 .eqr7bqq3 {
  cursor: pointer;
}

.emotion-2[aria-disabled='true'] {
  cursor: not-allowed;
  color: #b5b7bd;
}

.emotion-2[aria-disabled='true'] .eqr7bqq3 {
  cursor: not-allowed;
}

.emotion-2[aria-disabled='true'] .emotion-7 {
  fill: #e9eaeb;
}

.emotion-2[aria-disabled='true'] .emotion-7 .emotion-9 {
  stroke: #d9dadd;
  fill: #f3f3f4;
}

.emotion-2[aria-disabled='true'] .emotion-5[aria-invalid="true"]:checked+.emotion-7 {
  fill: #ffd3e3;
}

.emotion-2[aria-disabled='true'] .emotion-5[aria-invalid="true"]:checked+.emotion-7 .emotion-9 {
  stroke: #ffd3e3;
  fill: #ffd3e3;
}

.emotion-2[aria-disabled='true'] .emotion-5[aria-invalid="true"]+.emotion-7 {
  fill: #ffebf2;
}

.emotion-2[aria-disabled='true'] .emotion-5[aria-invalid="true"]+.emotion-7 .emotion-9 {
  stroke: #ffbbd3;
  fill: #ffebf2;
}

.emotion-2[aria-disabled='true'] .emotion-5:checked+.emotion-7 {
  fill: #e5dbfd;
}

.emotion-2[aria-disabled='true'] .emotion-5:checked+.emotion-7 .emotion-9 {
  stroke: #d8c5fc;
  fill: #d8c5fc;
}

.emotion-2[aria-disabled='true'] .emotion-5[aria-checked="mixed"]+.emotion-7 {
  fill: #e5dbfd;
}

.emotion-2[aria-disabled='true'] .emotion-5[aria-checked="mixed"]+.emotion-7 .emotion-9 {
  stroke: #e5dbfd;
  fill: #e5dbfd;
}

.emotion-2 .emotion-5:checked+.emotion-7 path {
  transform-origin: center;
  -webkit-transition: 200ms -webkit-transform ease-in-out;
  transition: 200ms transform ease-in-out;
  -webkit-transform: scale(1);
  -moz-transform: scale(1);
  -ms-transform: scale(1);
  transform: scale(1);
  -webkit-transform: translate(2px, 2px);
  -moz-transform: translate(2px, 2px);
  -ms-transform: translate(2px, 2px);
  transform: translate(2px, 2px);
}

.emotion-2 .emotion-5:checked+.emotion-7 .emotion-9 {
  fill: #8c40ef;
  stroke: #8c40ef;
}

.emotion-2 .emotion-5[aria-invalid="true"]:checked+.emotion-7 .emotion-9 {
  fill: #e51963;
  stroke: #e51963;
}

.emotion-2 .emotion-5[aria-checked="mixed"]+.emotion-7 .eqr7bqq5 {
  fill: #ffffff;
}

.emotion-2 .emotion-5[aria-checked="mixed"]+.emotion-7 .emotion-9 {
  fill: #8c40ef;
  stroke: #8c40ef;
}

.emotion-2:hover[aria-disabled='false'] .emotion-5[aria-invalid='false'][aria-checked='false']+.emotion-7 .emotion-9 {
  stroke: #792dd4;
  fill: #e5dbfd;
}

.emotion-2:hover[aria-disabled='false'] .emotion-5[aria-invalid='false'][aria-checked='true']+.emotion-7 .emotion-9 {
  stroke: #792dd4;
  fill: #792dd4;
}

.emotion-2:hover[aria-disabled='false'] .emotion-5[aria-invalid='false'][aria-checked='mixed']+.emotion-7 .emotion-9 {
  stroke: #792dd4;
  fill: #792dd4;
}

.emotion-2:hover[aria-disabled='false'] .emotion-5[aria-invalid='true'][aria-checked='false']+.emotion-7 .emotion-9 {
  stroke: #92103f;
  fill: #ffd3e3;
}

.emotion-2:hover[aria-disabled='false'] .emotion-5[aria-invalid='true'][aria-checked='true']+.emotion-7 .emotion-9 {
  stroke: #d6175c;
  fill: #d6175c;
}

.emotion-2 .emotion-5[aria-invalid="true"]+.emotion-7 {
  fill: #e51963;
}

.emotion-2 .emotion-5[aria-invalid="true"]+.emotion-7 .emotion-9 {
  stroke: #e51963;
  fill: #ffebf2;
}

.emotion-4 {
  position: absolute;
  white-space: nowrap;
  height: 1.5rem;
  width: 1.5rem;
  opacity: 0;
  border-width: 0;
}

.emotion-4:not(:disabled) {
  cursor: pointer;
}

.emotion-4:disabled {
  cursor: not-allowed;
}

.emotion-4:not(:disabled):checked+.emotion-7,
.emotion-4:not(:disabled)[aria-checked='mixed']+.emotion-7 {
  fill: #8c40ef;
}

.emotion-4:not(:disabled):checked+.emotion-7 .emotion-9,
.emotion-4:not(:disabled)[aria-checked='mixed']+.emotion-7 .emotion-9 {
  stroke: #8c40ef;
}

.emotion-4:not(:disabled)[aria-invalid='true']+.emotion-7,
.emotion-4:not(:disabled)[aria-invalid='mixed']+.emotion-7 {
  fill: #ffebf2;
}

.emotion-4:not(:disabled)[aria-invalid='true']+.emotion-7 .emotion-9,
.emotion-4:not(:disabled)[aria-invalid='mixed']+.emotion-7 .emotion-9 {
  stroke: #b3144d;
}

.emotion-4:focus+.emotion-7 {
  background-color: #f1eefc;
  fill: #ffebf2;
  outline: 1px solid 0px 0px 0px 3px #8c40ef40;
}

.emotion-4:focus+.emotion-7 .emotion-9 {
  stroke: #792dd4;
  fill: #e5dbfd;
}

.emotion-4[aria-invalid='true']:focus+.emotion-7 {
  background-color: #ffebf2;
  fill: #ffebf2;
  outline: 1px solid 0px 0px 0px 3px #f91b6c40;
}

.emotion-4[aria-invalid='true']:focus+.emotion-7 .emotion-9 {
  stroke: #92103f;
  fill: #ffd3e3;
}

.emotion-6 {
  border-radius: 0.25rem;
  height: 1.5rem;
  width: 1.5rem;
  min-width: 1.5rem;
  min-height: 1.5rem;
}

.emotion-6 path {
  fill: #ffffff;
  -webkit-transform: translate(2px, 2px);
  -moz-transform: translate(2px, 2px);
  -ms-transform: translate(2px, 2px);
  transform: translate(2px, 2px);
  -webkit-transform: scale(0);
  -moz-transform: scale(0);
  -ms-transform: scale(0);
  transform: scale(0);
}

.emotion-8 {
  fill: #ffffff;
  stroke: #d9dadd;
}

<div
    data-testid="testing"
  >
    <form
      class="emotion-0 emotion-1"
      novalidate=""
    >
      <div
        aria-disabled="false"
        class="emotion-2 emotion-3"
        data-checked="false"
        data-error="false"
      >
        <input
          aria-checked="false"
          aria-invalid="false"
          class="emotion-4 emotion-5"
          id="_r_0_"
          name="test"
          type="checkbox"
        />
        <svg
          class="emotion-6 emotion-7"
          fill="none"
          viewBox="0 0 24 24"
        >
          <g>
            <rect
              class="emotion-8 emotion-9"
              height="16"
              rx="0.125rem"
              stroke-width="2"
              width="16"
              x="4"
              y="4"
            />
            <path
              clip-rule="evenodd"
              d="M15.6678 5.26709C16.0849 5.6463 16.113 6.28907 15.7307 6.70276L9.29172 13.6705C9.10291 13.8748 8.83818 13.9937 8.55884 13.9998C8.2795 14.0058 8.0098 13.8984 7.81223 13.7024L4.30004 10.2185C3.89999 9.82169 3.89999 9.17831 4.30004 8.78149C4.70009 8.38467 5.34869 8.38467 5.74874 8.78149L8.50441 11.5149L14.2205 5.32951C14.6028 4.91583 15.2508 4.88788 15.6678 5.26709Z"
              fill="white"
              fill-rule="evenodd"
              height="9"
              width="12"
              x="5"
              y="4"
            />
          </g>
        </svg>
      </div>
    </form>
  </div>
</DocumentFragment>
`;

exports[`checkboxField > should render correctly checked without value 1`] = `
<DocumentFragment>
  .emotion-0 {
  display: contents;
}

.emotion-2 {
  position: relative;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  gap: 0.5rem;
}

.emotion-2 .eqr7bqq3 {
  cursor: pointer;
}

.emotion-2[aria-disabled='true'] {
  cursor: not-allowed;
  color: #b5b7bd;
}

.emotion-2[aria-disabled='true'] .eqr7bqq3 {
  cursor: not-allowed;
}

.emotion-2[aria-disabled='true'] .emotion-7 {
  fill: #e9eaeb;
}

.emotion-2[aria-disabled='true'] .emotion-7 .emotion-9 {
  stroke: #d9dadd;
  fill: #f3f3f4;
}

.emotion-2[aria-disabled='true'] .emotion-5[aria-invalid="true"]:checked+.emotion-7 {
  fill: #ffd3e3;
}

.emotion-2[aria-disabled='true'] .emotion-5[aria-invalid="true"]:checked+.emotion-7 .emotion-9 {
  stroke: #ffd3e3;
  fill: #ffd3e3;
}

.emotion-2[aria-disabled='true'] .emotion-5[aria-invalid="true"]+.emotion-7 {
  fill: #ffebf2;
}

.emotion-2[aria-disabled='true'] .emotion-5[aria-invalid="true"]+.emotion-7 .emotion-9 {
  stroke: #ffbbd3;
  fill: #ffebf2;
}

.emotion-2[aria-disabled='true'] .emotion-5:checked+.emotion-7 {
  fill: #e5dbfd;
}

.emotion-2[aria-disabled='true'] .emotion-5:checked+.emotion-7 .emotion-9 {
  stroke: #d8c5fc;
  fill: #d8c5fc;
}

.emotion-2[aria-disabled='true'] .emotion-5[aria-checked="mixed"]+.emotion-7 {
  fill: #e5dbfd;
}

.emotion-2[aria-disabled='true'] .emotion-5[aria-checked="mixed"]+.emotion-7 .emotion-9 {
  stroke: #e5dbfd;
  fill: #e5dbfd;
}

.emotion-2 .emotion-5:checked+.emotion-7 path {
  transform-origin: center;
  -webkit-transition: 200ms -webkit-transform ease-in-out;
  transition: 200ms transform ease-in-out;
  -webkit-transform: scale(1);
  -moz-transform: scale(1);
  -ms-transform: scale(1);
  transform: scale(1);
  -webkit-transform: translate(2px, 2px);
  -moz-transform: translate(2px, 2px);
  -ms-transform: translate(2px, 2px);
  transform: translate(2px, 2px);
}

.emotion-2 .emotion-5:checked+.emotion-7 .emotion-9 {
  fill: #8c40ef;
  stroke: #8c40ef;
}

.emotion-2 .emotion-5[aria-invalid="true"]:checked+.emotion-7 .emotion-9 {
  fill: #e51963;
  stroke: #e51963;
}

.emotion-2 .emotion-5[aria-checked="mixed"]+.emotion-7 .eqr7bqq5 {
  fill: #ffffff;
}

.emotion-2 .emotion-5[aria-checked="mixed"]+.emotion-7 .emotion-9 {
  fill: #8c40ef;
  stroke: #8c40ef;
}

.emotion-2:hover[aria-disabled='false'] .emotion-5[aria-invalid='false'][aria-checked='false']+.emotion-7 .emotion-9 {
  stroke: #792dd4;
  fill: #e5dbfd;
}

.emotion-2:hover[aria-disabled='false'] .emotion-5[aria-invalid='false'][aria-checked='true']+.emotion-7 .emotion-9 {
  stroke: #792dd4;
  fill: #792dd4;
}

.emotion-2:hover[aria-disabled='false'] .emotion-5[aria-invalid='false'][aria-checked='mixed']+.emotion-7 .emotion-9 {
  stroke: #792dd4;
  fill: #792dd4;
}

.emotion-2:hover[aria-disabled='false'] .emotion-5[aria-invalid='true'][aria-checked='false']+.emotion-7 .emotion-9 {
  stroke: #92103f;
  fill: #ffd3e3;
}

.emotion-2:hover[aria-disabled='false'] .emotion-5[aria-invalid='true'][aria-checked='true']+.emotion-7 .emotion-9 {
  stroke: #d6175c;
  fill: #d6175c;
}

.emotion-2 .emotion-5[aria-invalid="true"]+.emotion-7 {
  fill: #e51963;
}

.emotion-2 .emotion-5[aria-invalid="true"]+.emotion-7 .emotion-9 {
  stroke: #e51963;
  fill: #ffebf2;
}

.emotion-4 {
  position: absolute;
  white-space: nowrap;
  height: 1.5rem;
  width: 1.5rem;
  opacity: 0;
  border-width: 0;
}

.emotion-4:not(:disabled) {
  cursor: pointer;
}

.emotion-4:disabled {
  cursor: not-allowed;
}

.emotion-4:not(:disabled):checked+.emotion-7,
.emotion-4:not(:disabled)[aria-checked='mixed']+.emotion-7 {
  fill: #8c40ef;
}

.emotion-4:not(:disabled):checked+.emotion-7 .emotion-9,
.emotion-4:not(:disabled)[aria-checked='mixed']+.emotion-7 .emotion-9 {
  stroke: #8c40ef;
}

.emotion-4:not(:disabled)[aria-invalid='true']+.emotion-7,
.emotion-4:not(:disabled)[aria-invalid='mixed']+.emotion-7 {
  fill: #ffebf2;
}

.emotion-4:not(:disabled)[aria-invalid='true']+.emotion-7 .emotion-9,
.emotion-4:not(:disabled)[aria-invalid='mixed']+.emotion-7 .emotion-9 {
  stroke: #b3144d;
}

.emotion-4:focus+.emotion-7 {
  background-color: #f1eefc;
  fill: #ffebf2;
  outline: 1px solid 0px 0px 0px 3px #8c40ef40;
}

.emotion-4:focus+.emotion-7 .emotion-9 {
  stroke: #792dd4;
  fill: #e5dbfd;
}

.emotion-4[aria-invalid='true']:focus+.emotion-7 {
  background-color: #ffebf2;
  fill: #ffebf2;
  outline: 1px solid 0px 0px 0px 3px #f91b6c40;
}

.emotion-4[aria-invalid='true']:focus+.emotion-7 .emotion-9 {
  stroke: #92103f;
  fill: #ffd3e3;
}

.emotion-6 {
  border-radius: 0.25rem;
  height: 1.5rem;
  width: 1.5rem;
  min-width: 1.5rem;
  min-height: 1.5rem;
}

.emotion-6 path {
  fill: #ffffff;
  -webkit-transform: translate(2px, 2px);
  -moz-transform: translate(2px, 2px);
  -ms-transform: translate(2px, 2px);
  transform: translate(2px, 2px);
  -webkit-transform: scale(0);
  -moz-transform: scale(0);
  -ms-transform: scale(0);
  transform: scale(0);
}

.emotion-8 {
  fill: #ffffff;
  stroke: #d9dadd;
}

<div
    data-testid="testing"
  >
    <form
      class="emotion-0 emotion-1"
      novalidate=""
    >
      <div
        aria-disabled="false"
        class="emotion-2 emotion-3"
        data-checked="true"
        data-error="false"
      >
        <input
          aria-checked="true"
          aria-invalid="false"
          checked=""
          class="emotion-4 emotion-5"
          id="_r_6_"
          name="checked"
          type="checkbox"
        />
        <svg
          class="emotion-6 emotion-7"
          fill="none"
          viewBox="0 0 24 24"
        >
          <g>
            <rect
              class="emotion-8 emotion-9"
              height="16"
              rx="0.125rem"
              stroke-width="2"
              width="16"
              x="4"
              y="4"
            />
            <path
              clip-rule="evenodd"
              d="M15.6678 5.26709C16.0849 5.6463 16.113 6.28907 15.7307 6.70276L9.29172 13.6705C9.10291 13.8748 8.83818 13.9937 8.55884 13.9998C8.2795 14.0058 8.0098 13.8984 7.81223 13.7024L4.30004 10.2185C3.89999 9.82169 3.89999 9.17831 4.30004 8.78149C4.70009 8.38467 5.34869 8.38467 5.74874 8.78149L8.50441 11.5149L14.2205 5.32951C14.6028 4.91583 15.2508 4.88788 15.6678 5.26709Z"
              fill="white"
              fill-rule="evenodd"
              height="9"
              width="12"
              x="5"
              y="4"
            />
          </g>
        </svg>
      </div>
    </form>
  </div>
</DocumentFragment>
`;

exports[`checkboxField > should render correctly disabled 1`] = `
<DocumentFragment>
  .emotion-0 {
  display: contents;
}

.emotion-2 {
  position: relative;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  gap: 0.5rem;
}

.emotion-2 .eqr7bqq3 {
  cursor: pointer;
}

.emotion-2[aria-disabled='true'] {
  cursor: not-allowed;
  color: #b5b7bd;
}

.emotion-2[aria-disabled='true'] .eqr7bqq3 {
  cursor: not-allowed;
}

.emotion-2[aria-disabled='true'] .emotion-7 {
  fill: #e9eaeb;
}

.emotion-2[aria-disabled='true'] .emotion-7 .emotion-9 {
  stroke: #d9dadd;
  fill: #f3f3f4;
}

.emotion-2[aria-disabled='true'] .emotion-5[aria-invalid="true"]:checked+.emotion-7 {
  fill: #ffd3e3;
}

.emotion-2[aria-disabled='true'] .emotion-5[aria-invalid="true"]:checked+.emotion-7 .emotion-9 {
  stroke: #ffd3e3;
  fill: #ffd3e3;
}

.emotion-2[aria-disabled='true'] .emotion-5[aria-invalid="true"]+.emotion-7 {
  fill: #ffebf2;
}

.emotion-2[aria-disabled='true'] .emotion-5[aria-invalid="true"]+.emotion-7 .emotion-9 {
  stroke: #ffbbd3;
  fill: #ffebf2;
}

.emotion-2[aria-disabled='true'] .emotion-5:checked+.emotion-7 {
  fill: #e5dbfd;
}

.emotion-2[aria-disabled='true'] .emotion-5:checked+.emotion-7 .emotion-9 {
  stroke: #d8c5fc;
  fill: #d8c5fc;
}

.emotion-2[aria-disabled='true'] .emotion-5[aria-checked="mixed"]+.emotion-7 {
  fill: #e5dbfd;
}

.emotion-2[aria-disabled='true'] .emotion-5[aria-checked="mixed"]+.emotion-7 .emotion-9 {
  stroke: #e5dbfd;
  fill: #e5dbfd;
}

.emotion-2 .emotion-5:checked+.emotion-7 path {
  transform-origin: center;
  -webkit-transition: 200ms -webkit-transform ease-in-out;
  transition: 200ms transform ease-in-out;
  -webkit-transform: scale(1);
  -moz-transform: scale(1);
  -ms-transform: scale(1);
  transform: scale(1);
  -webkit-transform: translate(2px, 2px);
  -moz-transform: translate(2px, 2px);
  -ms-transform: translate(2px, 2px);
  transform: translate(2px, 2px);
}

.emotion-2 .emotion-5:checked+.emotion-7 .emotion-9 {
  fill: #8c40ef;
  stroke: #8c40ef;
}

.emotion-2 .emotion-5[aria-invalid="true"]:checked+.emotion-7 .emotion-9 {
  fill: #e51963;
  stroke: #e51963;
}

.emotion-2 .emotion-5[aria-checked="mixed"]+.emotion-7 .eqr7bqq5 {
  fill: #ffffff;
}

.emotion-2 .emotion-5[aria-checked="mixed"]+.emotion-7 .emotion-9 {
  fill: #8c40ef;
  stroke: #8c40ef;
}

.emotion-2:hover[aria-disabled='false'] .emotion-5[aria-invalid='false'][aria-checked='false']+.emotion-7 .emotion-9 {
  stroke: #792dd4;
  fill: #e5dbfd;
}

.emotion-2:hover[aria-disabled='false'] .emotion-5[aria-invalid='false'][aria-checked='true']+.emotion-7 .emotion-9 {
  stroke: #792dd4;
  fill: #792dd4;
}

.emotion-2:hover[aria-disabled='false'] .emotion-5[aria-invalid='false'][aria-checked='mixed']+.emotion-7 .emotion-9 {
  stroke: #792dd4;
  fill: #792dd4;
}

.emotion-2:hover[aria-disabled='false'] .emotion-5[aria-invalid='true'][aria-checked='false']+.emotion-7 .emotion-9 {
  stroke: #92103f;
  fill: #ffd3e3;
}

.emotion-2:hover[aria-disabled='false'] .emotion-5[aria-invalid='true'][aria-checked='true']+.emotion-7 .emotion-9 {
  stroke: #d6175c;
  fill: #d6175c;
}

.emotion-2 .emotion-5[aria-invalid="true"]+.emotion-7 {
  fill: #e51963;
}

.emotion-2 .emotion-5[aria-invalid="true"]+.emotion-7 .emotion-9 {
  stroke: #e51963;
  fill: #ffebf2;
}

.emotion-4 {
  position: absolute;
  white-space: nowrap;
  height: 1.5rem;
  width: 1.5rem;
  opacity: 0;
  border-width: 0;
}

.emotion-4:not(:disabled) {
  cursor: pointer;
}

.emotion-4:disabled {
  cursor: not-allowed;
}

.emotion-4:not(:disabled):checked+.emotion-7,
.emotion-4:not(:disabled)[aria-checked='mixed']+.emotion-7 {
  fill: #8c40ef;
}

.emotion-4:not(:disabled):checked+.emotion-7 .emotion-9,
.emotion-4:not(:disabled)[aria-checked='mixed']+.emotion-7 .emotion-9 {
  stroke: #8c40ef;
}

.emotion-4:not(:disabled)[aria-invalid='true']+.emotion-7,
.emotion-4:not(:disabled)[aria-invalid='mixed']+.emotion-7 {
  fill: #ffebf2;
}

.emotion-4:not(:disabled)[aria-invalid='true']+.emotion-7 .emotion-9,
.emotion-4:not(:disabled)[aria-invalid='mixed']+.emotion-7 .emotion-9 {
  stroke: #b3144d;
}

.emotion-4:focus+.emotion-7 {
  background-color: #f1eefc;
  fill: #ffebf2;
  outline: 1px solid 0px 0px 0px 3px #8c40ef40;
}

.emotion-4:focus+.emotion-7 .emotion-9 {
  stroke: #792dd4;
  fill: #e5dbfd;
}

.emotion-4[aria-invalid='true']:focus+.emotion-7 {
  background-color: #ffebf2;
  fill: #ffebf2;
  outline: 1px solid 0px 0px 0px 3px #f91b6c40;
}

.emotion-4[aria-invalid='true']:focus+.emotion-7 .emotion-9 {
  stroke: #92103f;
  fill: #ffd3e3;
}

.emotion-6 {
  border-radius: 0.25rem;
  height: 1.5rem;
  width: 1.5rem;
  min-width: 1.5rem;
  min-height: 1.5rem;
}

.emotion-6 path {
  fill: #ffffff;
  -webkit-transform: translate(2px, 2px);
  -moz-transform: translate(2px, 2px);
  -ms-transform: translate(2px, 2px);
  transform: translate(2px, 2px);
  -webkit-transform: scale(0);
  -moz-transform: scale(0);
  -ms-transform: scale(0);
  transform: scale(0);
}

.emotion-8 {
  fill: #ffffff;
  stroke: #d9dadd;
}

<div
    data-testid="testing"
  >
    <form
      class="emotion-0 emotion-1"
      novalidate=""
    >
      <div
        aria-disabled="true"
        class="emotion-2 emotion-3"
        data-checked="false"
        data-error="false"
      >
        <input
          aria-checked="false"
          aria-invalid="false"
          class="emotion-4 emotion-5"
          disabled=""
          id="_r_4_"
          name="test"
          type="checkbox"
        />
        <svg
          class="emotion-6 emotion-7"
          fill="none"
          viewBox="0 0 24 24"
        >
          <g>
            <rect
              class="emotion-8 emotion-9"
              height="16"
              rx="0.125rem"
              stroke-width="2"
              width="16"
              x="4"
              y="4"
            />
            <path
              clip-rule="evenodd"
              d="M15.6678 5.26709C16.0849 5.6463 16.113 6.28907 15.7307 6.70276L9.29172 13.6705C9.10291 13.8748 8.83818 13.9937 8.55884 13.9998C8.2795 14.0058 8.0098 13.8984 7.81223 13.7024L4.30004 10.2185C3.89999 9.82169 3.89999 9.17831 4.30004 8.78149C4.70009 8.38467 5.34869 8.38467 5.74874 8.78149L8.50441 11.5149L14.2205 5.32951C14.6028 4.91583 15.2508 4.88788 15.6678 5.26709Z"
              fill="white"
              fill-rule="evenodd"
              height="9"
              width="12"
              x="5"
              y="4"
            />
          </g>
        </svg>
      </div>
    </form>
  </div>
</DocumentFragment>
`;

exports[`checkboxField > should render correctly not checked without value 1`] = `
<DocumentFragment>
  .emotion-0 {
  display: contents;
}

.emotion-2 {
  position: relative;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  gap: 0.5rem;
}

.emotion-2 .eqr7bqq3 {
  cursor: pointer;
}

.emotion-2[aria-disabled='true'] {
  cursor: not-allowed;
  color: #b5b7bd;
}

.emotion-2[aria-disabled='true'] .eqr7bqq3 {
  cursor: not-allowed;
}

.emotion-2[aria-disabled='true'] .emotion-7 {
  fill: #e9eaeb;
}

.emotion-2[aria-disabled='true'] .emotion-7 .emotion-9 {
  stroke: #d9dadd;
  fill: #f3f3f4;
}

.emotion-2[aria-disabled='true'] .emotion-5[aria-invalid="true"]:checked+.emotion-7 {
  fill: #ffd3e3;
}

.emotion-2[aria-disabled='true'] .emotion-5[aria-invalid="true"]:checked+.emotion-7 .emotion-9 {
  stroke: #ffd3e3;
  fill: #ffd3e3;
}

.emotion-2[aria-disabled='true'] .emotion-5[aria-invalid="true"]+.emotion-7 {
  fill: #ffebf2;
}

.emotion-2[aria-disabled='true'] .emotion-5[aria-invalid="true"]+.emotion-7 .emotion-9 {
  stroke: #ffbbd3;
  fill: #ffebf2;
}

.emotion-2[aria-disabled='true'] .emotion-5:checked+.emotion-7 {
  fill: #e5dbfd;
}

.emotion-2[aria-disabled='true'] .emotion-5:checked+.emotion-7 .emotion-9 {
  stroke: #d8c5fc;
  fill: #d8c5fc;
}

.emotion-2[aria-disabled='true'] .emotion-5[aria-checked="mixed"]+.emotion-7 {
  fill: #e5dbfd;
}

.emotion-2[aria-disabled='true'] .emotion-5[aria-checked="mixed"]+.emotion-7 .emotion-9 {
  stroke: #e5dbfd;
  fill: #e5dbfd;
}

.emotion-2 .emotion-5:checked+.emotion-7 path {
  transform-origin: center;
  -webkit-transition: 200ms -webkit-transform ease-in-out;
  transition: 200ms transform ease-in-out;
  -webkit-transform: scale(1);
  -moz-transform: scale(1);
  -ms-transform: scale(1);
  transform: scale(1);
  -webkit-transform: translate(2px, 2px);
  -moz-transform: translate(2px, 2px);
  -ms-transform: translate(2px, 2px);
  transform: translate(2px, 2px);
}

.emotion-2 .emotion-5:checked+.emotion-7 .emotion-9 {
  fill: #8c40ef;
  stroke: #8c40ef;
}

.emotion-2 .emotion-5[aria-invalid="true"]:checked+.emotion-7 .emotion-9 {
  fill: #e51963;
  stroke: #e51963;
}

.emotion-2 .emotion-5[aria-checked="mixed"]+.emotion-7 .eqr7bqq5 {
  fill: #ffffff;
}

.emotion-2 .emotion-5[aria-checked="mixed"]+.emotion-7 .emotion-9 {
  fill: #8c40ef;
  stroke: #8c40ef;
}

.emotion-2:hover[aria-disabled='false'] .emotion-5[aria-invalid='false'][aria-checked='false']+.emotion-7 .emotion-9 {
  stroke: #792dd4;
  fill: #e5dbfd;
}

.emotion-2:hover[aria-disabled='false'] .emotion-5[aria-invalid='false'][aria-checked='true']+.emotion-7 .emotion-9 {
  stroke: #792dd4;
  fill: #792dd4;
}

.emotion-2:hover[aria-disabled='false'] .emotion-5[aria-invalid='false'][aria-checked='mixed']+.emotion-7 .emotion-9 {
  stroke: #792dd4;
  fill: #792dd4;
}

.emotion-2:hover[aria-disabled='false'] .emotion-5[aria-invalid='true'][aria-checked='false']+.emotion-7 .emotion-9 {
  stroke: #92103f;
  fill: #ffd3e3;
}

.emotion-2:hover[aria-disabled='false'] .emotion-5[aria-invalid='true'][aria-checked='true']+.emotion-7 .emotion-9 {
  stroke: #d6175c;
  fill: #d6175c;
}

.emotion-2 .emotion-5[aria-invalid="true"]+.emotion-7 {
  fill: #e51963;
}

.emotion-2 .emotion-5[aria-invalid="true"]+.emotion-7 .emotion-9 {
  stroke: #e51963;
  fill: #ffebf2;
}

.emotion-4 {
  position: absolute;
  white-space: nowrap;
  height: 1.5rem;
  width: 1.5rem;
  opacity: 0;
  border-width: 0;
}

.emotion-4:not(:disabled) {
  cursor: pointer;
}

.emotion-4:disabled {
  cursor: not-allowed;
}

.emotion-4:not(:disabled):checked+.emotion-7,
.emotion-4:not(:disabled)[aria-checked='mixed']+.emotion-7 {
  fill: #8c40ef;
}

.emotion-4:not(:disabled):checked+.emotion-7 .emotion-9,
.emotion-4:not(:disabled)[aria-checked='mixed']+.emotion-7 .emotion-9 {
  stroke: #8c40ef;
}

.emotion-4:not(:disabled)[aria-invalid='true']+.emotion-7,
.emotion-4:not(:disabled)[aria-invalid='mixed']+.emotion-7 {
  fill: #ffebf2;
}

.emotion-4:not(:disabled)[aria-invalid='true']+.emotion-7 .emotion-9,
.emotion-4:not(:disabled)[aria-invalid='mixed']+.emotion-7 .emotion-9 {
  stroke: #b3144d;
}

.emotion-4:focus+.emotion-7 {
  background-color: #f1eefc;
  fill: #ffebf2;
  outline: 1px solid 0px 0px 0px 3px #8c40ef40;
}

.emotion-4:focus+.emotion-7 .emotion-9 {
  stroke: #792dd4;
  fill: #e5dbfd;
}

.emotion-4[aria-invalid='true']:focus+.emotion-7 {
  background-color: #ffebf2;
  fill: #ffebf2;
  outline: 1px solid 0px 0px 0px 3px #f91b6c40;
}

.emotion-4[aria-invalid='true']:focus+.emotion-7 .emotion-9 {
  stroke: #92103f;
  fill: #ffd3e3;
}

.emotion-6 {
  border-radius: 0.25rem;
  height: 1.5rem;
  width: 1.5rem;
  min-width: 1.5rem;
  min-height: 1.5rem;
}

.emotion-6 path {
  fill: #ffffff;
  -webkit-transform: translate(2px, 2px);
  -moz-transform: translate(2px, 2px);
  -ms-transform: translate(2px, 2px);
  transform: translate(2px, 2px);
  -webkit-transform: scale(0);
  -moz-transform: scale(0);
  -ms-transform: scale(0);
  transform: scale(0);
}

.emotion-8 {
  fill: #ffffff;
  stroke: #d9dadd;
}

<div
    data-testid="testing"
  >
    <form
      class="emotion-0 emotion-1"
      novalidate=""
    >
      <div
        aria-disabled="false"
        class="emotion-2 emotion-3"
        data-checked="false"
        data-error="false"
      >
        <input
          aria-checked="false"
          aria-invalid="false"
          class="emotion-4 emotion-5"
          id="_r_8_"
          name="checked"
          type="checkbox"
        />
        <svg
          class="emotion-6 emotion-7"
          fill="none"
          viewBox="0 0 24 24"
        >
          <g>
            <rect
              class="emotion-8 emotion-9"
              height="16"
              rx="0.125rem"
              stroke-width="2"
              width="16"
              x="4"
              y="4"
            />
            <path
              clip-rule="evenodd"
              d="M15.6678 5.26709C16.0849 5.6463 16.113 6.28907 15.7307 6.70276L9.29172 13.6705C9.10291 13.8748 8.83818 13.9937 8.55884 13.9998C8.2795 14.0058 8.0098 13.8984 7.81223 13.7024L4.30004 10.2185C3.89999 9.82169 3.89999 9.17831 4.30004 8.78149C4.70009 8.38467 5.34869 8.38467 5.74874 8.78149L8.50441 11.5149L14.2205 5.32951C14.6028 4.91583 15.2508 4.88788 15.6678 5.26709Z"
              fill="white"
              fill-rule="evenodd"
              height="9"
              width="12"
              x="5"
              y="4"
            />
          </g>
        </svg>
      </div>
    </form>
  </div>
</DocumentFragment>
`;

exports[`checkboxField > should render correctly with aria-label 1`] = `
<DocumentFragment>
  .emotion-0 {
  display: contents;
}

.emotion-2 {
  position: relative;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  gap: 0.5rem;
}

.emotion-2 .eqr7bqq3 {
  cursor: pointer;
}

.emotion-2[aria-disabled='true'] {
  cursor: not-allowed;
  color: #b5b7bd;
}

.emotion-2[aria-disabled='true'] .eqr7bqq3 {
  cursor: not-allowed;
}

.emotion-2[aria-disabled='true'] .emotion-7 {
  fill: #e9eaeb;
}

.emotion-2[aria-disabled='true'] .emotion-7 .emotion-9 {
  stroke: #d9dadd;
  fill: #f3f3f4;
}

.emotion-2[aria-disabled='true'] .emotion-5[aria-invalid="true"]:checked+.emotion-7 {
  fill: #ffd3e3;
}

.emotion-2[aria-disabled='true'] .emotion-5[aria-invalid="true"]:checked+.emotion-7 .emotion-9 {
  stroke: #ffd3e3;
  fill: #ffd3e3;
}

.emotion-2[aria-disabled='true'] .emotion-5[aria-invalid="true"]+.emotion-7 {
  fill: #ffebf2;
}

.emotion-2[aria-disabled='true'] .emotion-5[aria-invalid="true"]+.emotion-7 .emotion-9 {
  stroke: #ffbbd3;
  fill: #ffebf2;
}

.emotion-2[aria-disabled='true'] .emotion-5:checked+.emotion-7 {
  fill: #e5dbfd;
}

.emotion-2[aria-disabled='true'] .emotion-5:checked+.emotion-7 .emotion-9 {
  stroke: #d8c5fc;
  fill: #d8c5fc;
}

.emotion-2[aria-disabled='true'] .emotion-5[aria-checked="mixed"]+.emotion-7 {
  fill: #e5dbfd;
}

.emotion-2[aria-disabled='true'] .emotion-5[aria-checked="mixed"]+.emotion-7 .emotion-9 {
  stroke: #e5dbfd;
  fill: #e5dbfd;
}

.emotion-2 .emotion-5:checked+.emotion-7 path {
  transform-origin: center;
  -webkit-transition: 200ms -webkit-transform ease-in-out;
  transition: 200ms transform ease-in-out;
  -webkit-transform: scale(1);
  -moz-transform: scale(1);
  -ms-transform: scale(1);
  transform: scale(1);
  -webkit-transform: translate(2px, 2px);
  -moz-transform: translate(2px, 2px);
  -ms-transform: translate(2px, 2px);
  transform: translate(2px, 2px);
}

.emotion-2 .emotion-5:checked+.emotion-7 .emotion-9 {
  fill: #8c40ef;
  stroke: #8c40ef;
}

.emotion-2 .emotion-5[aria-invalid="true"]:checked+.emotion-7 .emotion-9 {
  fill: #e51963;
  stroke: #e51963;
}

.emotion-2 .emotion-5[aria-checked="mixed"]+.emotion-7 .eqr7bqq5 {
  fill: #ffffff;
}

.emotion-2 .emotion-5[aria-checked="mixed"]+.emotion-7 .emotion-9 {
  fill: #8c40ef;
  stroke: #8c40ef;
}

.emotion-2:hover[aria-disabled='false'] .emotion-5[aria-invalid='false'][aria-checked='false']+.emotion-7 .emotion-9 {
  stroke: #792dd4;
  fill: #e5dbfd;
}

.emotion-2:hover[aria-disabled='false'] .emotion-5[aria-invalid='false'][aria-checked='true']+.emotion-7 .emotion-9 {
  stroke: #792dd4;
  fill: #792dd4;
}

.emotion-2:hover[aria-disabled='false'] .emotion-5[aria-invalid='false'][aria-checked='mixed']+.emotion-7 .emotion-9 {
  stroke: #792dd4;
  fill: #792dd4;
}

.emotion-2:hover[aria-disabled='false'] .emotion-5[aria-invalid='true'][aria-checked='false']+.emotion-7 .emotion-9 {
  stroke: #92103f;
  fill: #ffd3e3;
}

.emotion-2:hover[aria-disabled='false'] .emotion-5[aria-invalid='true'][aria-checked='true']+.emotion-7 .emotion-9 {
  stroke: #d6175c;
  fill: #d6175c;
}

.emotion-2 .emotion-5[aria-invalid="true"]+.emotion-7 {
  fill: #e51963;
}

.emotion-2 .emotion-5[aria-invalid="true"]+.emotion-7 .emotion-9 {
  stroke: #e51963;
  fill: #ffebf2;
}

.emotion-4 {
  position: absolute;
  white-space: nowrap;
  height: 1.5rem;
  width: 1.5rem;
  opacity: 0;
  border-width: 0;
}

.emotion-4:not(:disabled) {
  cursor: pointer;
}

.emotion-4:disabled {
  cursor: not-allowed;
}

.emotion-4:not(:disabled):checked+.emotion-7,
.emotion-4:not(:disabled)[aria-checked='mixed']+.emotion-7 {
  fill: #8c40ef;
}

.emotion-4:not(:disabled):checked+.emotion-7 .emotion-9,
.emotion-4:not(:disabled)[aria-checked='mixed']+.emotion-7 .emotion-9 {
  stroke: #8c40ef;
}

.emotion-4:not(:disabled)[aria-invalid='true']+.emotion-7,
.emotion-4:not(:disabled)[aria-invalid='mixed']+.emotion-7 {
  fill: #ffebf2;
}

.emotion-4:not(:disabled)[aria-invalid='true']+.emotion-7 .emotion-9,
.emotion-4:not(:disabled)[aria-invalid='mixed']+.emotion-7 .emotion-9 {
  stroke: #b3144d;
}

.emotion-4:focus+.emotion-7 {
  background-color: #f1eefc;
  fill: #ffebf2;
  outline: 1px solid 0px 0px 0px 3px #8c40ef40;
}

.emotion-4:focus+.emotion-7 .emotion-9 {
  stroke: #792dd4;
  fill: #e5dbfd;
}

.emotion-4[aria-invalid='true']:focus+.emotion-7 {
  background-color: #ffebf2;
  fill: #ffebf2;
  outline: 1px solid 0px 0px 0px 3px #f91b6c40;
}

.emotion-4[aria-invalid='true']:focus+.emotion-7 .emotion-9 {
  stroke: #92103f;
  fill: #ffd3e3;
}

.emotion-6 {
  border-radius: 0.25rem;
  height: 1.5rem;
  width: 1.5rem;
  min-width: 1.5rem;
  min-height: 1.5rem;
}

.emotion-6 path {
  fill: #ffffff;
  -webkit-transform: translate(2px, 2px);
  -moz-transform: translate(2px, 2px);
  -ms-transform: translate(2px, 2px);
  transform: translate(2px, 2px);
  -webkit-transform: scale(0);
  -moz-transform: scale(0);
  -ms-transform: scale(0);
  transform: scale(0);
}

.emotion-8 {
  fill: #ffffff;
  stroke: #d9dadd;
}

<div
    data-testid="testing"
  >
    <form
      class="emotion-0 emotion-1"
      novalidate=""
    >
      <div
        aria-disabled="false"
        class="emotion-2 emotion-3"
        data-checked="false"
        data-error="false"
      >
        <input
          aria-checked="false"
          aria-invalid="false"
          aria-label="test"
          class="emotion-4 emotion-5"
          id="_r_2_"
          name="test"
          type="checkbox"
        />
        <svg
          class="emotion-6 emotion-7"
          fill="none"
          viewBox="0 0 24 24"
        >
          <g>
            <rect
              class="emotion-8 emotion-9"
              height="16"
              rx="0.125rem"
              stroke-width="2"
              width="16"
              x="4"
              y="4"
            />
            <path
              clip-rule="evenodd"
              d="M15.6678 5.26709C16.0849 5.6463 16.113 6.28907 15.7307 6.70276L9.29172 13.6705C9.10291 13.8748 8.83818 13.9937 8.55884 13.9998C8.2795 14.0058 8.0098 13.8984 7.81223 13.7024L4.30004 10.2185C3.89999 9.82169 3.89999 9.17831 4.30004 8.78149C4.70009 8.38467 5.34869 8.38467 5.74874 8.78149L8.50441 11.5149L14.2205 5.32951C14.6028 4.91583 15.2508 4.88788 15.6678 5.26709Z"
              fill="white"
              fill-rule="evenodd"
              height="9"
              width="12"
              x="5"
              y="4"
            />
          </g>
        </svg>
      </div>
    </form>
  </div>
</DocumentFragment>
`;

exports[`checkboxField > should render correctly with errors 1`] = `
<DocumentFragment>
  .emotion-0 {
  display: contents;
}

.emotion-2 {
  position: relative;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  gap: 0.5rem;
}

.emotion-2 .eqr7bqq3 {
  cursor: pointer;
}

.emotion-2[aria-disabled='true'] {
  cursor: not-allowed;
  color: #b5b7bd;
}

.emotion-2[aria-disabled='true'] .eqr7bqq3 {
  cursor: not-allowed;
}

.emotion-2[aria-disabled='true'] .emotion-7 {
  fill: #e9eaeb;
}

.emotion-2[aria-disabled='true'] .emotion-7 .emotion-9 {
  stroke: #d9dadd;
  fill: #f3f3f4;
}

.emotion-2[aria-disabled='true'] .emotion-5[aria-invalid="true"]:checked+.emotion-7 {
  fill: #ffd3e3;
}

.emotion-2[aria-disabled='true'] .emotion-5[aria-invalid="true"]:checked+.emotion-7 .emotion-9 {
  stroke: #ffd3e3;
  fill: #ffd3e3;
}

.emotion-2[aria-disabled='true'] .emotion-5[aria-invalid="true"]+.emotion-7 {
  fill: #ffebf2;
}

.emotion-2[aria-disabled='true'] .emotion-5[aria-invalid="true"]+.emotion-7 .emotion-9 {
  stroke: #ffbbd3;
  fill: #ffebf2;
}

.emotion-2[aria-disabled='true'] .emotion-5:checked+.emotion-7 {
  fill: #e5dbfd;
}

.emotion-2[aria-disabled='true'] .emotion-5:checked+.emotion-7 .emotion-9 {
  stroke: #d8c5fc;
  fill: #d8c5fc;
}

.emotion-2[aria-disabled='true'] .emotion-5[aria-checked="mixed"]+.emotion-7 {
  fill: #e5dbfd;
}

.emotion-2[aria-disabled='true'] .emotion-5[aria-checked="mixed"]+.emotion-7 .emotion-9 {
  stroke: #e5dbfd;
  fill: #e5dbfd;
}

.emotion-2 .emotion-5:checked+.emotion-7 path {
  transform-origin: center;
  -webkit-transition: 200ms -webkit-transform ease-in-out;
  transition: 200ms transform ease-in-out;
  -webkit-transform: scale(1);
  -moz-transform: scale(1);
  -ms-transform: scale(1);
  transform: scale(1);
  -webkit-transform: translate(2px, 2px);
  -moz-transform: translate(2px, 2px);
  -ms-transform: translate(2px, 2px);
  transform: translate(2px, 2px);
}

.emotion-2 .emotion-5:checked+.emotion-7 .emotion-9 {
  fill: #8c40ef;
  stroke: #8c40ef;
}

.emotion-2 .emotion-5[aria-invalid="true"]:checked+.emotion-7 .emotion-9 {
  fill: #e51963;
  stroke: #e51963;
}

.emotion-2 .emotion-5[aria-checked="mixed"]+.emotion-7 .eqr7bqq5 {
  fill: #ffffff;
}

.emotion-2 .emotion-5[aria-checked="mixed"]+.emotion-7 .emotion-9 {
  fill: #8c40ef;
  stroke: #8c40ef;
}

.emotion-2:hover[aria-disabled='false'] .emotion-5[aria-invalid='false'][aria-checked='false']+.emotion-7 .emotion-9 {
  stroke: #792dd4;
  fill: #e5dbfd;
}

.emotion-2:hover[aria-disabled='false'] .emotion-5[aria-invalid='false'][aria-checked='true']+.emotion-7 .emotion-9 {
  stroke: #792dd4;
  fill: #792dd4;
}

.emotion-2:hover[aria-disabled='false'] .emotion-5[aria-invalid='false'][aria-checked='mixed']+.emotion-7 .emotion-9 {
  stroke: #792dd4;
  fill: #792dd4;
}

.emotion-2:hover[aria-disabled='false'] .emotion-5[aria-invalid='true'][aria-checked='false']+.emotion-7 .emotion-9 {
  stroke: #92103f;
  fill: #ffd3e3;
}

.emotion-2:hover[aria-disabled='false'] .emotion-5[aria-invalid='true'][aria-checked='true']+.emotion-7 .emotion-9 {
  stroke: #d6175c;
  fill: #d6175c;
}

.emotion-2 .emotion-5[aria-invalid="true"]+.emotion-7 {
  fill: #e51963;
}

.emotion-2 .emotion-5[aria-invalid="true"]+.emotion-7 .emotion-9 {
  stroke: #e51963;
  fill: #ffebf2;
}

.emotion-4 {
  position: absolute;
  white-space: nowrap;
  height: 1.5rem;
  width: 1.5rem;
  opacity: 0;
  border-width: 0;
}

.emotion-4:not(:disabled) {
  cursor: pointer;
}

.emotion-4:disabled {
  cursor: not-allowed;
}

.emotion-4:not(:disabled):checked+.emotion-7,
.emotion-4:not(:disabled)[aria-checked='mixed']+.emotion-7 {
  fill: #8c40ef;
}

.emotion-4:not(:disabled):checked+.emotion-7 .emotion-9,
.emotion-4:not(:disabled)[aria-checked='mixed']+.emotion-7 .emotion-9 {
  stroke: #8c40ef;
}

.emotion-4:not(:disabled)[aria-invalid='true']+.emotion-7,
.emotion-4:not(:disabled)[aria-invalid='mixed']+.emotion-7 {
  fill: #ffebf2;
}

.emotion-4:not(:disabled)[aria-invalid='true']+.emotion-7 .emotion-9,
.emotion-4:not(:disabled)[aria-invalid='mixed']+.emotion-7 .emotion-9 {
  stroke: #b3144d;
}

.emotion-4:focus+.emotion-7 {
  background-color: #f1eefc;
  fill: #ffebf2;
  outline: 1px solid 0px 0px 0px 3px #8c40ef40;
}

.emotion-4:focus+.emotion-7 .emotion-9 {
  stroke: #792dd4;
  fill: #e5dbfd;
}

.emotion-4[aria-invalid='true']:focus+.emotion-7 {
  background-color: #ffebf2;
  fill: #ffebf2;
  outline: 1px solid 0px 0px 0px 3px #f91b6c40;
}

.emotion-4[aria-invalid='true']:focus+.emotion-7 .emotion-9 {
  stroke: #92103f;
  fill: #ffd3e3;
}

.emotion-6 {
  border-radius: 0.25rem;
  height: 1.5rem;
  width: 1.5rem;
  min-width: 1.5rem;
  min-height: 1.5rem;
}

.emotion-6 path {
  fill: #ffffff;
  -webkit-transform: translate(2px, 2px);
  -moz-transform: translate(2px, 2px);
  -ms-transform: translate(2px, 2px);
  transform: translate(2px, 2px);
  -webkit-transform: scale(0);
  -moz-transform: scale(0);
  -ms-transform: scale(0);
  transform: scale(0);
}

.emotion-8 {
  fill: #ffffff;
  stroke: #d9dadd;
}

.emotion-10 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-flex-wrap: nowrap;
  -webkit-flex-wrap: nowrap;
  -ms-flex-wrap: nowrap;
  flex-wrap: nowrap;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  -webkit-align-items: normal;
  -webkit-box-align: normal;
  -ms-flex-align: normal;
  align-items: normal;
  -webkit-box-pack: normal;
  -ms-flex-pack: normal;
  -webkit-justify-content: normal;
  justify-content: normal;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  gap: 0.25rem;
}

.emotion-12 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-flex-wrap: nowrap;
  -webkit-flex-wrap: nowrap;
  -ms-flex-wrap: nowrap;
  flex-wrap: nowrap;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: normal;
  -ms-flex-pack: normal;
  -webkit-justify-content: normal;
  justify-content: normal;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  gap: 0.25rem;
}

.emotion-15 {
  color: #3f4250;
  font-size: 1rem;
  font-family: Inter,sans-serif;
  font-weight: 400;
  letter-spacing: 0;
  line-height: 1.5rem;
  text-transform: none;
  -webkit-text-decoration: none;
  text-decoration: none;
  width: 100%;
  cursor: pointer;
}

.emotion-18 {
  color: #b3144d;
  font-size: 0.75rem;
  font-family: Inter,sans-serif;
  font-weight: 400;
  letter-spacing: 0;
  line-height: 1rem;
  text-transform: none;
  -webkit-text-decoration: none;
  text-decoration: none;
  padding-top: 0.25rem;
}

<div
    data-testid="testing"
  >
    <form
      class="emotion-0 emotion-1"
      novalidate=""
    >
      <div
        aria-disabled="false"
        class="emotion-2 emotion-3"
        data-checked="false"
        data-error="true"
      >
        <input
          aria-checked="false"
          aria-describedby="_r_d_-hint"
          aria-invalid="true"
          class="emotion-4 emotion-5"
          id="_r_d_"
          name="test"
          type="checkbox"
        />
        <svg
          class="emotion-6 emotion-7"
          fill="none"
          viewBox="0 0 24 24"
        >
          <g>
            <rect
              class="emotion-8 emotion-9"
              height="16"
              rx="0.125rem"
              stroke-width="2"
              width="16"
              x="4"
              y="4"
            />
            <path
              clip-rule="evenodd"
              d="M15.6678 5.26709C16.0849 5.6463 16.113 6.28907 15.7307 6.70276L9.29172 13.6705C9.10291 13.8748 8.83818 13.9937 8.55884 13.9998C8.2795 14.0058 8.0098 13.8984 7.81223 13.7024L4.30004 10.2185C3.89999 9.82169 3.89999 9.17831 4.30004 8.78149C4.70009 8.38467 5.34869 8.38467 5.74874 8.78149L8.50441 11.5149L14.2205 5.32951C14.6028 4.91583 15.2508 4.88788 15.6678 5.26709Z"
              fill="white"
              fill-rule="evenodd"
              height="9"
              width="12"
              x="5"
              y="4"
            />
          </g>
        </svg>
        <div
          class="emotion-10 emotion-11"
        >
          <div
            class="emotion-12 emotion-11"
          >
            <label
              class="emotion-14 emotion-15 emotion-16"
              for="_r_d_"
            >
              Checkbox field error
            </label>
          </div>
          <span
            class="emotion-17 emotion-18 emotion-16"
          >
            This field is required
          </span>
        </div>
      </div>
      <div>
        Focus
      </div>
    </form>
  </div>
</DocumentFragment>
`;

exports[`checkboxField > should trigger events correctly 1`] = `
<DocumentFragment>
  .emotion-0 {
  display: contents;
}

.emotion-2 {
  position: relative;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  gap: 0.5rem;
}

.emotion-2 .eqr7bqq3 {
  cursor: pointer;
}

.emotion-2[aria-disabled='true'] {
  cursor: not-allowed;
  color: #b5b7bd;
}

.emotion-2[aria-disabled='true'] .eqr7bqq3 {
  cursor: not-allowed;
}

.emotion-2[aria-disabled='true'] .emotion-7 {
  fill: #e9eaeb;
}

.emotion-2[aria-disabled='true'] .emotion-7 .emotion-9 {
  stroke: #d9dadd;
  fill: #f3f3f4;
}

.emotion-2[aria-disabled='true'] .emotion-5[aria-invalid="true"]:checked+.emotion-7 {
  fill: #ffd3e3;
}

.emotion-2[aria-disabled='true'] .emotion-5[aria-invalid="true"]:checked+.emotion-7 .emotion-9 {
  stroke: #ffd3e3;
  fill: #ffd3e3;
}

.emotion-2[aria-disabled='true'] .emotion-5[aria-invalid="true"]+.emotion-7 {
  fill: #ffebf2;
}

.emotion-2[aria-disabled='true'] .emotion-5[aria-invalid="true"]+.emotion-7 .emotion-9 {
  stroke: #ffbbd3;
  fill: #ffebf2;
}

.emotion-2[aria-disabled='true'] .emotion-5:checked+.emotion-7 {
  fill: #e5dbfd;
}

.emotion-2[aria-disabled='true'] .emotion-5:checked+.emotion-7 .emotion-9 {
  stroke: #d8c5fc;
  fill: #d8c5fc;
}

.emotion-2[aria-disabled='true'] .emotion-5[aria-checked="mixed"]+.emotion-7 {
  fill: #e5dbfd;
}

.emotion-2[aria-disabled='true'] .emotion-5[aria-checked="mixed"]+.emotion-7 .emotion-9 {
  stroke: #e5dbfd;
  fill: #e5dbfd;
}

.emotion-2 .emotion-5:checked+.emotion-7 path {
  transform-origin: center;
  -webkit-transition: 200ms -webkit-transform ease-in-out;
  transition: 200ms transform ease-in-out;
  -webkit-transform: scale(1);
  -moz-transform: scale(1);
  -ms-transform: scale(1);
  transform: scale(1);
  -webkit-transform: translate(2px, 2px);
  -moz-transform: translate(2px, 2px);
  -ms-transform: translate(2px, 2px);
  transform: translate(2px, 2px);
}

.emotion-2 .emotion-5:checked+.emotion-7 .emotion-9 {
  fill: #8c40ef;
  stroke: #8c40ef;
}

.emotion-2 .emotion-5[aria-invalid="true"]:checked+.emotion-7 .emotion-9 {
  fill: #e51963;
  stroke: #e51963;
}

.emotion-2 .emotion-5[aria-checked="mixed"]+.emotion-7 .eqr7bqq5 {
  fill: #ffffff;
}

.emotion-2 .emotion-5[aria-checked="mixed"]+.emotion-7 .emotion-9 {
  fill: #8c40ef;
  stroke: #8c40ef;
}

.emotion-2:hover[aria-disabled='false'] .emotion-5[aria-invalid='false'][aria-checked='false']+.emotion-7 .emotion-9 {
  stroke: #792dd4;
  fill: #e5dbfd;
}

.emotion-2:hover[aria-disabled='false'] .emotion-5[aria-invalid='false'][aria-checked='true']+.emotion-7 .emotion-9 {
  stroke: #792dd4;
  fill: #792dd4;
}

.emotion-2:hover[aria-disabled='false'] .emotion-5[aria-invalid='false'][aria-checked='mixed']+.emotion-7 .emotion-9 {
  stroke: #792dd4;
  fill: #792dd4;
}

.emotion-2:hover[aria-disabled='false'] .emotion-5[aria-invalid='true'][aria-checked='false']+.emotion-7 .emotion-9 {
  stroke: #92103f;
  fill: #ffd3e3;
}

.emotion-2:hover[aria-disabled='false'] .emotion-5[aria-invalid='true'][aria-checked='true']+.emotion-7 .emotion-9 {
  stroke: #d6175c;
  fill: #d6175c;
}

.emotion-2 .emotion-5[aria-invalid="true"]+.emotion-7 {
  fill: #e51963;
}

.emotion-2 .emotion-5[aria-invalid="true"]+.emotion-7 .emotion-9 {
  stroke: #e51963;
  fill: #ffebf2;
}

.emotion-4 {
  position: absolute;
  white-space: nowrap;
  height: 1.5rem;
  width: 1.5rem;
  opacity: 0;
  border-width: 0;
}

.emotion-4:not(:disabled) {
  cursor: pointer;
}

.emotion-4:disabled {
  cursor: not-allowed;
}

.emotion-4:not(:disabled):checked+.emotion-7,
.emotion-4:not(:disabled)[aria-checked='mixed']+.emotion-7 {
  fill: #8c40ef;
}

.emotion-4:not(:disabled):checked+.emotion-7 .emotion-9,
.emotion-4:not(:disabled)[aria-checked='mixed']+.emotion-7 .emotion-9 {
  stroke: #8c40ef;
}

.emotion-4:not(:disabled)[aria-invalid='true']+.emotion-7,
.emotion-4:not(:disabled)[aria-invalid='mixed']+.emotion-7 {
  fill: #ffebf2;
}

.emotion-4:not(:disabled)[aria-invalid='true']+.emotion-7 .emotion-9,
.emotion-4:not(:disabled)[aria-invalid='mixed']+.emotion-7 .emotion-9 {
  stroke: #b3144d;
}

.emotion-4:focus+.emotion-7 {
  background-color: #f1eefc;
  fill: #ffebf2;
  outline: 1px solid 0px 0px 0px 3px #8c40ef40;
}

.emotion-4:focus+.emotion-7 .emotion-9 {
  stroke: #792dd4;
  fill: #e5dbfd;
}

.emotion-4[aria-invalid='true']:focus+.emotion-7 {
  background-color: #ffebf2;
  fill: #ffebf2;
  outline: 1px solid 0px 0px 0px 3px #f91b6c40;
}

.emotion-4[aria-invalid='true']:focus+.emotion-7 .emotion-9 {
  stroke: #92103f;
  fill: #ffd3e3;
}

.emotion-6 {
  border-radius: 0.25rem;
  height: 1.5rem;
  width: 1.5rem;
  min-width: 1.5rem;
  min-height: 1.5rem;
}

.emotion-6 path {
  fill: #ffffff;
  -webkit-transform: translate(2px, 2px);
  -moz-transform: translate(2px, 2px);
  -ms-transform: translate(2px, 2px);
  transform: translate(2px, 2px);
  -webkit-transform: scale(0);
  -moz-transform: scale(0);
  -ms-transform: scale(0);
  transform: scale(0);
}

.emotion-8 {
  fill: #ffffff;
  stroke: #d9dadd;
}

.emotion-10 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-flex-wrap: nowrap;
  -webkit-flex-wrap: nowrap;
  -ms-flex-wrap: nowrap;
  flex-wrap: nowrap;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  -webkit-align-items: normal;
  -webkit-box-align: normal;
  -ms-flex-align: normal;
  align-items: normal;
  -webkit-box-pack: normal;
  -ms-flex-pack: normal;
  -webkit-justify-content: normal;
  justify-content: normal;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  gap: 0.25rem;
}

.emotion-12 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-flex-wrap: nowrap;
  -webkit-flex-wrap: nowrap;
  -ms-flex-wrap: nowrap;
  flex-wrap: nowrap;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: normal;
  -ms-flex-pack: normal;
  -webkit-justify-content: normal;
  justify-content: normal;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  gap: 0.25rem;
}

.emotion-15 {
  color: #3f4250;
  font-size: 1rem;
  font-family: Inter,sans-serif;
  font-weight: 400;
  letter-spacing: 0;
  line-height: 1.5rem;
  text-transform: none;
  -webkit-text-decoration: none;
  text-decoration: none;
  width: 100%;
  cursor: pointer;
}

<div
    data-testid="testing"
  >
    <form
      class="emotion-0 emotion-1"
      novalidate=""
    >
      <div
        aria-disabled="false"
        class="emotion-2 emotion-3"
        data-checked="true"
        data-error="false"
      >
        <input
          aria-checked="true"
          aria-invalid="false"
          class="emotion-4 emotion-5"
          id="_r_a_"
          name="test"
          type="checkbox"
        />
        <svg
          class="emotion-6 emotion-7"
          fill="none"
          viewBox="0 0 24 24"
        >
          <g>
            <rect
              class="emotion-8 emotion-9"
              height="16"
              rx="0.125rem"
              stroke-width="2"
              width="16"
              x="4"
              y="4"
            />
            <path
              clip-rule="evenodd"
              d="M15.6678 5.26709C16.0849 5.6463 16.113 6.28907 15.7307 6.70276L9.29172 13.6705C9.10291 13.8748 8.83818 13.9937 8.55884 13.9998C8.2795 14.0058 8.0098 13.8984 7.81223 13.7024L4.30004 10.2185C3.89999 9.82169 3.89999 9.17831 4.30004 8.78149C4.70009 8.38467 5.34869 8.38467 5.74874 8.78149L8.50441 11.5149L14.2205 5.32951C14.6028 4.91583 15.2508 4.88788 15.6678 5.26709Z"
              fill="white"
              fill-rule="evenodd"
              height="9"
              width="12"
              x="5"
              y="4"
            />
          </g>
        </svg>
        <div
          class="emotion-10 emotion-11"
        >
          <div
            class="emotion-12 emotion-11"
          >
            <label
              class="emotion-14 emotion-15 emotion-16"
              for="_r_a_"
            >
              Checkbox field events
            </label>
          </div>
        </div>
      </div>
    </form>
  </div>
</DocumentFragment>
`;
